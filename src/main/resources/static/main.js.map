{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addmeal/addmeal.component.css","webpack:///./src/app/addmeal/addmeal.component.html","webpack:///./src/app/addmeal/addmeal.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/configuration/configuration.component.css","webpack:///./src/app/configuration/configuration.component.html","webpack:///./src/app/configuration/configuration.component.ts","webpack:///./src/app/mealdetails/mealdetails.component.css","webpack:///./src/app/mealdetails/mealdetails.component.html","webpack:///./src/app/mealdetails/mealdetails.component.ts","webpack:///./src/app/mealplan.service.ts","webpack:///./src/app/mealplan/mealplan.component.css","webpack:///./src/app/mealplan/mealplan.component.html","webpack:///./src/app/mealplan/mealplan.component.ts","webpack:///./src/app/meals.service.ts","webpack:///./src/app/meals/meals.component.css","webpack:///./src/app/meals/meals.component.html","webpack:///./src/app/meals/meals.component.ts","webpack:///./src/app/model/meal.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h2>Add new Meal</h2>\\n<div class=\\\"panel-body\\\">\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <label>Name:</label>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <input [(ngModel)]=\\\"meal.name\\\" placeholder=\\\"name\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <label>Recipe:</label>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <textarea [(ngModel)]=\\\"meal.recipe\\\" rows=\\\"5\\\" placeholder=\\\"do this, then that...\\\"></textarea>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <label>Ingredients:</label>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <textarea [(ngModel)]=\\\"meal.ingredients\\\" rows=\\\"5\\\" placeholder=\\\"ingredient1,ingredient2\\\"></textarea>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <button class=\\\"btn-primary\\\" (click)=\\\"addMeal()\\\">Add</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Meal} from '../model/meal';\nimport {MealsService} from '../meals.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-addmeal',\n  templateUrl: './addmeal.component.html',\n  styleUrls: ['./addmeal.component.css']\n})\nexport class AddmealComponent implements OnInit {\n  meal: Meal;\n  constructor(private mealservice: MealsService, private router: Router) { }\n\n  ngOnInit() {\n    this.meal = new Meal();\n    this.meal.id = null;\n    this.meal.name = '';\n    this.meal.ingredients = '';\n  }\n  addMeal() {\n    this.mealservice.addMeal(this.meal);\n    this.router.navigateByUrl('meals');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\">Automate My Dinner</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li><a routerLink=\\\"/mealplan\\\">Meal Plan</a></li>\\n      <li><a routerLink=\\\"/meals\\\">Meals</a></li>\\n      <li><a routerLink=\\\"/addmeal\\\">Add New Meal</a></li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a routerLink=\\\"/config\\\"><span class=\\\"glyphicon glyphicon-cog\\\"></span></a></li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"panel\\\">\\n  <div class=\\\"panel-body\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule} from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MealplanComponent } from './mealplan/mealplan.component';\nimport { MealsComponent } from './meals/meals.component';\nimport { AddmealComponent } from './addmeal/addmeal.component';\nimport { MealdetailsComponent } from './mealdetails/mealdetails.component';\nimport { ConfigurationComponent } from './configuration/configuration.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MealplanComponent,\n    MealsComponent,\n    AddmealComponent,\n    MealdetailsComponent,\n    ConfigurationComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', redirectTo: '/mealplan', pathMatch: 'full' },\n      {path: 'mealplan', component: MealplanComponent},\n      {path: 'meals', component: MealsComponent},\n      {path: 'mealdetails', component: MealdetailsComponent},\n      {path: 'addmeal', component: AddmealComponent},\n      {path: 'config', component: ConfigurationComponent}\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  configuration works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  styleUrls: ['./configuration.component.css']\n})\nexport class ConfigurationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table width=\\\"80%\\\" class=\\\"table table-bordered\\\">\\n  <tr><td width=\\\"20%\\\"><b>Name:  </b></td><td style=\\\"word-wrap: break-word;max-width: 200px\\\">{{meal.name}}</td></tr>\\n  <tr><td width=\\\"20%\\\"><b>Recipe:  </b></td><td style=\\\"word-wrap: break-word;max-width: 200px\\\">{{meal.recipe}}</td></tr>\\n  <tr><td width=\\\"20%\\\"><b>Ingredients:</b></td><td style=\\\"word-wrap: break-word;max-width: 200px\\\">{{meal.ingredients}}</td></tr>\\n</table>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Meal} from '../model/meal';\nimport {MealsService} from '../meals.service';\n\n@Component({\n  selector: 'app-mealdetails',\n  templateUrl: './mealdetails.component.html',\n  styleUrls: ['./mealdetails.component.css']\n})\nexport class MealdetailsComponent implements OnInit {\n  @Input() meal: Meal;\n  constructor(private mealService: MealsService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {MealPlan} from './model/mealplan';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealplanService {\n  private mealPlanUrl = '/plan';\n  constructor(private http: HttpClient) { }\n\n  getMealPlan(): Observable<MealPlan> {\n    return this.http.get<MealPlan>(this.mealPlanUrl + '/current');\n  }\n\n  generateNewMealPlan(): Observable<MealPlan> {\n    return this.http.get<MealPlan>(this.mealPlanUrl + '/new');\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\n  <div class=\\\"col-lg-4\\\">\\n    <h2>Meal Plan:</h2>\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>Date</th>\\n          <th>Meal</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let day of mealPlan.dayList\\\" (click)=\\\"onSelect(day)\\\">\\n          <td>{{day.date | date:'EEE-dd-MMM-yy'}}</td>\\n          <td>{{day.meal.name}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <br>\\n\\n    <button class=\\\"btn-warning\\\" (click)=\\\"generateNewMealPlan()\\\">Generate New Plan</button>\\n\\n    <br>\\n\\n  </div>\\n\\n  <div class=\\\"col-lg-8\\\">\\n    <h2>Details:</h2>\\n    <div class=\\\"pre-scrollable\\\">\\n      <app-mealdetails [meal]=\\\"selectedMeal\\\"></app-mealdetails>\\n    </div>\\n\\n    <br>\\n\\n    <h2>Shopping List</h2>\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"pre-scrollable\\\">\\n        <table class=\\\"bordered-table\\\">\\n          <tbody>\\n          <tr *ngFor=\\\"let ingredient of mealPlan.ingredientsList\\\">\\n            <td>\\n              {{ingredient}}\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Meal} from '../model/meal';\nimport {MealplanService} from '../mealplan.service';\nimport {MealPlan} from '../model/mealplan';\nimport {Day} from '../model/day';\n\n@Component({\n  selector: 'app-mealplan',\n  templateUrl: './mealplan.component.html',\n  styleUrls: ['./mealplan.component.css']\n})\nexport class MealplanComponent implements OnInit {\n  mealPlan: MealPlan;\n  selectedMeal: Meal;\n  constructor(private mealplanService: MealplanService) { }\n\n  ngOnInit() {\n    this.getMealPlan();\n  }\n  getMealPlan() {\n    this.mealplanService.getMealPlan().subscribe(mealPlan => this.mealPlan = mealPlan);\n  }\n  generateNewMealPlan() {\n    this.mealplanService.generateNewMealPlan().subscribe(mealPlan => this.mealPlan = mealPlan);\n  }\n  onSelect(day: Day) {\n    this.selectedMeal = day.meal;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Meal} from './model/meal';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealsService {\n  private mealsUrl = '/meals';\n  constructor(private http: HttpClient) { }\n\n  getMealList(): Observable<Meal[]> {\n    return this.http.get<Meal[]>(this.mealsUrl);\n  }\n\n  deleteMeal(meal: Meal) {\n    this.http.post('/meals/delete', meal.id).subscribe();\n  }\n\n  addMeal(meal: Meal) {\n    this.http.post('/meals/add', meal).subscribe();\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-4\\\">\\n    <h2>Meals:</h2>\\n    <div class=\\\"pre-scrollable\\\">\\n      <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>Meal</th>\\n            <th>Delete</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let meal of mealList\\\" (click)=\\\"onSelect(meal)\\\">\\n          <td>{{meal.name}}</td><td><button class=\\\"btn-danger\\\" (click)=\\\"deleteMeal(meal)\\\">Delete</button></td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-8\\\">\\n    <h2>Details:</h2>\\n    <app-mealdetails [meal]=\\\"selectedMeal\\\"></app-mealdetails>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Meal} from '../model/meal';\nimport {MealsService} from '../meals.service';\n\n@Component({\n  selector: 'app-meals',\n  templateUrl: './meals.component.html',\n  styleUrls: ['./meals.component.css']\n})\nexport class MealsComponent implements OnInit {\n\n  mealList: Meal[];\n  selectedMeal: Meal;\n  constructor(private mealservice: MealsService) { }\n\n  ngOnInit() {\n    this.getMealList();\n  }\n\n  getMealList(): void {\n    this.mealservice.getMealList().subscribe(mealList => this.mealList = mealList);\n  }\n  onSelect(meal: Meal) {\n    this.selectedMeal = meal;\n  }\n  deleteMeal(meal: Meal) {\n    console.log('Deleting ' + meal.name);\n    this.mealservice.deleteMeal(meal);\n    this.getMealList();\n  }\n\n}\n","export class Meal {\n  id: number;\n  name: string;\n  recipe: string;\n  ingredients: string;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}